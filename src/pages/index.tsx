import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { api } from "~/utils/api";
import { schema, type TutorForm } from "~/utils/zodHelpers";

const Home: NextPage = () => {
  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col">
        <nav className="flex w-full justify-center p-4">
          <div>
            {!user.isSignedIn && (
              <div className="rounded bg-purple-600 p-4 text-white">
                <SignInButton />
              </div>
            )}
          </div>
          <div>
            {!!user.isSignedIn && (
              <div className="rounded bg-purple-600 p-4 text-white">
                <SignOutButton />
              </div>
            )}
          </div>
        </nav>
        <TutorAvailabilityForm />
        <TutorAvailabilityTable />
      </main>
    </>
  );
};

const TutorAvailabilityForm = () => {
  const { register, handleSubmit } = useForm<TutorForm>({
    resolver: zodResolver(schema),
  });

  const { mutate } = api.tutoralAvailability.create.useMutation({
    onSuccess: () => {
      console.log("SUCCESS POSTING");
      // void ctx.tutorAvailability.getAll.invalidate();
    },
    onError: (e) => {
      console.log("ERROR", e);
    },
  });

  const submit = (data: TutorForm) => {
    console.log("data in submit", data);
    mutate(data);
  };

  /* eslint-disable */

  return (
    <div className="flex w-full justify-center py-4">
      <div className="flex flex-col items-center justify-center">
        <h1 className="text-2xl">Tutors Availability</h1>
        <form onSubmit={handleSubmit(submit)} className="p-4">
          <input type="text" placeholder="Tutor's name" {...register("name")} />
          <input
            type="email"
            placeholder="Tutor Email"
            {...register("email")}
          />
          <input type="time" {...register("startTime")} />
          <input type="time" {...register("endTime")} />
          <input type="submit" value="Add Availability" />
        </form>
      </div>
    </div>
  );
};

const TutorAvailabilityTable = () => {
  const { data } = api.tutoralAvailability.getAll.useQuery();
  console.log("All tutor availability :>> ", data);

  return (
    <div className="relative overflow-x-auto p-4">
      <table className="w-full text-left text-sm">
        <thead className="bg-slate-500 text-xs uppercase">
          <tr>
            <th scope="col" className="px-6 py-3">
              Name
            </th>
            <th scope="col" className="px-6 py-3">
              Email
            </th>
            <th scope="col" className="px-6 py-3">
              Start Time
            </th>
            <th scope="col" className="px-6 py-3">
              End Time
            </th>
            <th scope="col" className="px-6 py-3">
              Delete
            </th>
          </tr>
        </thead>
        <tbody>
          <tr className="border-b bg-slate-100">
            <th
              scope="row"
              className="whitespace-nowrap px-6 py-4 font-medium text-gray-900"
            >
              Apple MacBook Pro 17"
            </th>
            <td className="px-6 py-4">Silver</td>
            <td className="px-6 py-4">Laptop</td>
            <td className="px-6 py-4">$2999</td>
            <td className="px-6 py-4">
              <button>Delete Availability</button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  );
};

export default Home;
